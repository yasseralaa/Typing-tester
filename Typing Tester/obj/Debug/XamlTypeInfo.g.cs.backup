//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Typing_Tester
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace Typing_Tester.Typing_Tester_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[40];
            _typeNameTable[0] = "Typing_Tester.advancedtest1";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Typing_Tester.Common.ObservableDictionary";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "Typing_Tester.Common.NavigationHelper";
            _typeNameTable[7] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[8] = "Typing_Tester.advancedtest10";
            _typeNameTable[9] = "Typing_Tester.advancedtest2";
            _typeNameTable[10] = "Typing_Tester.advancedtest3";
            _typeNameTable[11] = "Typing_Tester.advancedtest4";
            _typeNameTable[12] = "Typing_Tester.advancedtest5";
            _typeNameTable[13] = "Typing_Tester.advancedtest6";
            _typeNameTable[14] = "Typing_Tester.advancedtest7";
            _typeNameTable[15] = "Typing_Tester.advancedtest8";
            _typeNameTable[16] = "Typing_Tester.advancedtest9";
            _typeNameTable[17] = "Typing_Tester.challenge";
            _typeNameTable[18] = "Typing_Tester.description";
            _typeNameTable[19] = "CharmFlyoutLibrary.CharmFlyout";
            _typeNameTable[20] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[21] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[22] = "Boolean";
            _typeNameTable[23] = "Double";
            _typeNameTable[24] = "System.Windows.Input.ICommand";
            _typeNameTable[25] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[26] = "Typing_Tester.MainPage";
            _typeNameTable[27] = "App.UserControl";
            _typeNameTable[28] = "Typing_Tester.speedtest";
            _typeNameTable[29] = "Typing_Tester.speedtest2";
            _typeNameTable[30] = "Typing_Tester.speedtest3";
            _typeNameTable[31] = "Typing_Tester.speedtest4";
            _typeNameTable[32] = "Typing_Tester.speedtest5";
            _typeNameTable[33] = "Typing_Tester.Training1";
            _typeNameTable[34] = "Typing_Tester.Training2";
            _typeNameTable[35] = "AdDuplex.Controls.AdControl";
            _typeNameTable[36] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[37] = "Int32";
            _typeNameTable[38] = "Typing_Tester.Training3";
            _typeNameTable[39] = "Typing_Tester.Training4";

            _typeTable = new global::System.Type[40];
            _typeTable[0] = typeof(global::Typing_Tester.advancedtest1);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::Typing_Tester.Common.ObservableDictionary);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::Typing_Tester.Common.NavigationHelper);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[8] = typeof(global::Typing_Tester.advancedtest10);
            _typeTable[9] = typeof(global::Typing_Tester.advancedtest2);
            _typeTable[10] = typeof(global::Typing_Tester.advancedtest3);
            _typeTable[11] = typeof(global::Typing_Tester.advancedtest4);
            _typeTable[12] = typeof(global::Typing_Tester.advancedtest5);
            _typeTable[13] = typeof(global::Typing_Tester.advancedtest6);
            _typeTable[14] = typeof(global::Typing_Tester.advancedtest7);
            _typeTable[15] = typeof(global::Typing_Tester.advancedtest8);
            _typeTable[16] = typeof(global::Typing_Tester.advancedtest9);
            _typeTable[17] = typeof(global::Typing_Tester.challenge);
            _typeTable[18] = typeof(global::Typing_Tester.description);
            _typeTable[19] = typeof(global::CharmFlyoutLibrary.CharmFlyout);
            _typeTable[20] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[22] = typeof(global::System.Boolean);
            _typeTable[23] = typeof(global::System.Double);
            _typeTable[24] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[26] = typeof(global::Typing_Tester.MainPage);
            _typeTable[27] = typeof(global::App.UserControl);
            _typeTable[28] = typeof(global::Typing_Tester.speedtest);
            _typeTable[29] = typeof(global::Typing_Tester.speedtest2);
            _typeTable[30] = typeof(global::Typing_Tester.speedtest3);
            _typeTable[31] = typeof(global::Typing_Tester.speedtest4);
            _typeTable[32] = typeof(global::Typing_Tester.speedtest5);
            _typeTable[33] = typeof(global::Typing_Tester.Training1);
            _typeTable[34] = typeof(global::Typing_Tester.Training2);
            _typeTable[35] = typeof(global::AdDuplex.Controls.AdControl);
            _typeTable[36] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[37] = typeof(global::System.Int32);
            _typeTable[38] = typeof(global::Typing_Tester.Training3);
            _typeTable[39] = typeof(global::Typing_Tester.Training4);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_advancedtest1() { return new global::Typing_Tester.advancedtest1(); }
        private object Activate_3_ObservableDictionary() { return new global::Typing_Tester.Common.ObservableDictionary(); }
        private object Activate_8_advancedtest10() { return new global::Typing_Tester.advancedtest10(); }
        private object Activate_9_advancedtest2() { return new global::Typing_Tester.advancedtest2(); }
        private object Activate_10_advancedtest3() { return new global::Typing_Tester.advancedtest3(); }
        private object Activate_11_advancedtest4() { return new global::Typing_Tester.advancedtest4(); }
        private object Activate_12_advancedtest5() { return new global::Typing_Tester.advancedtest5(); }
        private object Activate_13_advancedtest6() { return new global::Typing_Tester.advancedtest6(); }
        private object Activate_14_advancedtest7() { return new global::Typing_Tester.advancedtest7(); }
        private object Activate_15_advancedtest8() { return new global::Typing_Tester.advancedtest8(); }
        private object Activate_16_advancedtest9() { return new global::Typing_Tester.advancedtest9(); }
        private object Activate_17_challenge() { return new global::Typing_Tester.challenge(); }
        private object Activate_18_description() { return new global::Typing_Tester.description(); }
        private object Activate_19_CharmFlyout() { return new global::CharmFlyoutLibrary.CharmFlyout(); }
        private object Activate_26_MainPage() { return new global::Typing_Tester.MainPage(); }
        private object Activate_27_UserControl() { return new global::App.UserControl(); }
        private object Activate_28_speedtest() { return new global::Typing_Tester.speedtest(); }
        private object Activate_29_speedtest2() { return new global::Typing_Tester.speedtest2(); }
        private object Activate_30_speedtest3() { return new global::Typing_Tester.speedtest3(); }
        private object Activate_31_speedtest4() { return new global::Typing_Tester.speedtest4(); }
        private object Activate_32_speedtest5() { return new global::Typing_Tester.speedtest5(); }
        private object Activate_33_Training1() { return new global::Typing_Tester.Training1(); }
        private object Activate_34_Training2() { return new global::Typing_Tester.Training2(); }
        private object Activate_35_AdControl() { return new global::AdDuplex.Controls.AdControl(); }
        private object Activate_38_Training3() { return new global::Typing_Tester.Training3(); }
        private object Activate_39_Training4() { return new global::Typing_Tester.Training4(); }
        private void MapAdd_3_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Typing_Tester.advancedtest1
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_advancedtest1;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Typing_Tester.Common.ObservableDictionary
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_3_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  String
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Typing_Tester.Common.NavigationHelper
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Typing_Tester.advancedtest10
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_advancedtest10;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 9:   //  Typing_Tester.advancedtest2
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_9_advancedtest2;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 10:   //  Typing_Tester.advancedtest3
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_10_advancedtest3;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 11:   //  Typing_Tester.advancedtest4
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_advancedtest4;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 12:   //  Typing_Tester.advancedtest5
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_advancedtest5;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 13:   //  Typing_Tester.advancedtest6
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_advancedtest6;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 14:   //  Typing_Tester.advancedtest7
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_advancedtest7;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 15:   //  Typing_Tester.advancedtest8
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_advancedtest8;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 16:   //  Typing_Tester.advancedtest9
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_advancedtest9;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 17:   //  Typing_Tester.challenge
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_challenge;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 18:   //  Typing_Tester.description
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_18_description;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 19:   //  CharmFlyoutLibrary.CharmFlyout
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_19_CharmFlyout;
                userType.AddMemberName("Heading");
                userType.AddMemberName("HeadingBackgroundBrush");
                userType.AddMemberName("Logo");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("ReturnToParentOnBack");
                userType.AddMemberName("ParentFlyout");
                userType.AddMemberName("FlyoutHeight");
                userType.AddMemberName("FlyoutWidth");
                userType.AddMemberName("BackCommand");
                userType.AddMemberName("HeadingForegroundBrush");
                userType.AddMemberName("ContentForegroundBrush");
                userType.AddMemberName("ContentBackgroundBrush");
                userType.AddMemberName("ContentPadding");
                xamlType = userType;
                break;

            case 20:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Boolean
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Double
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  System.Windows.Input.ICommand
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Typing_Tester.MainPage
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_MainPage;
                xamlType = userType;
                break;

            case 27:   //  App.UserControl
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_27_UserControl;
                xamlType = userType;
                break;

            case 28:   //  Typing_Tester.speedtest
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_speedtest;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 29:   //  Typing_Tester.speedtest2
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_speedtest2;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 30:   //  Typing_Tester.speedtest3
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_speedtest3;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 31:   //  Typing_Tester.speedtest4
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_speedtest4;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 32:   //  Typing_Tester.speedtest5
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_speedtest5;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 33:   //  Typing_Tester.Training1
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_Training1;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 34:   //  Typing_Tester.Training2
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_Training2;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 35:   //  AdDuplex.Controls.AdControl
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_35_AdControl;
                userType.AddMemberName("AppId");
                userType.AddMemberName("ResetConfig");
                userType.AddMemberName("IsTest");
                userType.AddMemberName("RefreshInterval");
                userType.AddMemberName("Size");
                xamlType = userType;
                break;

            case 36:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  Int32
                xamlType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Typing_Tester.Training3
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_Training3;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;

            case 39:   //  Typing_Tester.Training4
                userType = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_Training4;
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("NavigationHelper");
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::AdDuplex.Controls.AdDuplex_Controls_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::CharmFlyoutLibrary.CharmFlyoutLibrary_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_advancedtest1_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest1)instance;
            return that.DefaultViewModel;
        }
        private object get_1_advancedtest1_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest1)instance;
            return that.NavigationHelper;
        }
        private object get_2_advancedtest10_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest10)instance;
            return that.DefaultViewModel;
        }
        private object get_3_advancedtest10_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest10)instance;
            return that.NavigationHelper;
        }
        private object get_4_advancedtest2_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest2)instance;
            return that.DefaultViewModel;
        }
        private object get_5_advancedtest2_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest2)instance;
            return that.NavigationHelper;
        }
        private object get_6_advancedtest3_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest3)instance;
            return that.DefaultViewModel;
        }
        private object get_7_advancedtest3_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest3)instance;
            return that.NavigationHelper;
        }
        private object get_8_advancedtest4_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest4)instance;
            return that.DefaultViewModel;
        }
        private object get_9_advancedtest4_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest4)instance;
            return that.NavigationHelper;
        }
        private object get_10_advancedtest5_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest5)instance;
            return that.DefaultViewModel;
        }
        private object get_11_advancedtest5_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest5)instance;
            return that.NavigationHelper;
        }
        private object get_12_advancedtest6_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest6)instance;
            return that.DefaultViewModel;
        }
        private object get_13_advancedtest6_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest6)instance;
            return that.NavigationHelper;
        }
        private object get_14_advancedtest7_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest7)instance;
            return that.DefaultViewModel;
        }
        private object get_15_advancedtest7_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest7)instance;
            return that.NavigationHelper;
        }
        private object get_16_advancedtest8_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest8)instance;
            return that.DefaultViewModel;
        }
        private object get_17_advancedtest8_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest8)instance;
            return that.NavigationHelper;
        }
        private object get_18_advancedtest9_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.advancedtest9)instance;
            return that.DefaultViewModel;
        }
        private object get_19_advancedtest9_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.advancedtest9)instance;
            return that.NavigationHelper;
        }
        private object get_20_challenge_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.challenge)instance;
            return that.DefaultViewModel;
        }
        private object get_21_challenge_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.challenge)instance;
            return that.NavigationHelper;
        }
        private object get_22_description_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.description)instance;
            return that.DefaultViewModel;
        }
        private object get_23_description_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.description)instance;
            return that.NavigationHelper;
        }
        private object get_24_CharmFlyout_Heading(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.Heading;
        }
        private void set_24_CharmFlyout_Heading(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.Heading = (global::System.String)Value;
        }
        private object get_25_CharmFlyout_HeadingBackgroundBrush(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.HeadingBackgroundBrush;
        }
        private void set_25_CharmFlyout_HeadingBackgroundBrush(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.HeadingBackgroundBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_26_CharmFlyout_Logo(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.Logo;
        }
        private void set_26_CharmFlyout_Logo(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.Logo = (global::System.Object)Value;
        }
        private object get_27_CharmFlyout_IsOpen(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.IsOpen;
        }
        private void set_27_CharmFlyout_IsOpen(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_28_CharmFlyout_ReturnToParentOnBack(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.ReturnToParentOnBack;
        }
        private void set_28_CharmFlyout_ReturnToParentOnBack(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.ReturnToParentOnBack = (global::System.Boolean)Value;
        }
        private object get_29_CharmFlyout_ParentFlyout(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.ParentFlyout;
        }
        private void set_29_CharmFlyout_ParentFlyout(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.ParentFlyout = (global::CharmFlyoutLibrary.CharmFlyout)Value;
        }
        private object get_30_CharmFlyout_FlyoutHeight(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.FlyoutHeight;
        }
        private object get_31_CharmFlyout_FlyoutWidth(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.FlyoutWidth;
        }
        private void set_31_CharmFlyout_FlyoutWidth(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.FlyoutWidth = (global::System.Double)Value;
        }
        private object get_32_CharmFlyout_BackCommand(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.BackCommand;
        }
        private object get_33_CharmFlyout_HeadingForegroundBrush(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.HeadingForegroundBrush;
        }
        private void set_33_CharmFlyout_HeadingForegroundBrush(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.HeadingForegroundBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_34_CharmFlyout_ContentForegroundBrush(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.ContentForegroundBrush;
        }
        private void set_34_CharmFlyout_ContentForegroundBrush(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.ContentForegroundBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_35_CharmFlyout_ContentBackgroundBrush(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.ContentBackgroundBrush;
        }
        private void set_35_CharmFlyout_ContentBackgroundBrush(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.ContentBackgroundBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_36_CharmFlyout_ContentPadding(object instance)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            return that.ContentPadding;
        }
        private void set_36_CharmFlyout_ContentPadding(object instance, object Value)
        {
            var that = (global::CharmFlyoutLibrary.CharmFlyout)instance;
            that.ContentPadding = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_37_speedtest_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.speedtest)instance;
            return that.DefaultViewModel;
        }
        private object get_38_speedtest_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.speedtest)instance;
            return that.NavigationHelper;
        }
        private object get_39_speedtest2_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.speedtest2)instance;
            return that.DefaultViewModel;
        }
        private object get_40_speedtest2_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.speedtest2)instance;
            return that.NavigationHelper;
        }
        private object get_41_speedtest3_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.speedtest3)instance;
            return that.DefaultViewModel;
        }
        private object get_42_speedtest3_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.speedtest3)instance;
            return that.NavigationHelper;
        }
        private object get_43_speedtest4_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.speedtest4)instance;
            return that.DefaultViewModel;
        }
        private object get_44_speedtest4_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.speedtest4)instance;
            return that.NavigationHelper;
        }
        private object get_45_speedtest5_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.speedtest5)instance;
            return that.DefaultViewModel;
        }
        private object get_46_speedtest5_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.speedtest5)instance;
            return that.NavigationHelper;
        }
        private object get_47_Training1_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.Training1)instance;
            return that.DefaultViewModel;
        }
        private object get_48_Training1_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.Training1)instance;
            return that.NavigationHelper;
        }
        private object get_49_Training2_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.Training2)instance;
            return that.DefaultViewModel;
        }
        private object get_50_Training2_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.Training2)instance;
            return that.NavigationHelper;
        }
        private object get_51_AdControl_AppId(object instance)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            return that.AppId;
        }
        private void set_51_AdControl_AppId(object instance, object Value)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            that.AppId = (global::System.String)Value;
        }
        private object get_52_AdControl_ResetConfig(object instance)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            return that.ResetConfig;
        }
        private void set_52_AdControl_ResetConfig(object instance, object Value)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            that.ResetConfig = (global::System.Boolean)Value;
        }
        private object get_53_AdControl_IsTest(object instance)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            return that.IsTest;
        }
        private void set_53_AdControl_IsTest(object instance, object Value)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            that.IsTest = (global::System.Boolean)Value;
        }
        private object get_54_AdControl_RefreshInterval(object instance)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            return that.RefreshInterval;
        }
        private void set_54_AdControl_RefreshInterval(object instance, object Value)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            that.RefreshInterval = (global::System.Int32)Value;
        }
        private object get_55_AdControl_Size(object instance)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            return that.Size;
        }
        private void set_55_AdControl_Size(object instance, object Value)
        {
            var that = (global::AdDuplex.Controls.AdControl)instance;
            that.Size = (global::System.String)Value;
        }
        private object get_56_Training3_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.Training3)instance;
            return that.DefaultViewModel;
        }
        private object get_57_Training3_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.Training3)instance;
            return that.NavigationHelper;
        }
        private object get_58_Training4_DefaultViewModel(object instance)
        {
            var that = (global::Typing_Tester.Training4)instance;
            return that.DefaultViewModel;
        }
        private object get_59_Training4_NavigationHelper(object instance)
        {
            var that = (global::Typing_Tester.Training4)instance;
            return that.NavigationHelper;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember xamlMember = null;
            global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Typing_Tester.advancedtest1.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest1");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_0_advancedtest1_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest1.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest1");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_1_advancedtest1_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest10.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest10");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_2_advancedtest10_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest10.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest10");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_3_advancedtest10_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest2.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_4_advancedtest2_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest2.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_5_advancedtest2_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest3.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_6_advancedtest3_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest3.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_7_advancedtest3_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest4.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_8_advancedtest4_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest4.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_9_advancedtest4_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest5.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest5");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_10_advancedtest5_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest5.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest5");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_11_advancedtest5_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest6.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest6");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_12_advancedtest6_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest6.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest6");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_13_advancedtest6_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest7.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest7");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_14_advancedtest7_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest7.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest7");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_15_advancedtest7_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest8.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest8");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_16_advancedtest8_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest8.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest8");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_17_advancedtest8_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest9.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest9");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_18_advancedtest9_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.advancedtest9.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.advancedtest9");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_19_advancedtest9_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.challenge.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.challenge");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_20_challenge_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.challenge.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.challenge");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_21_challenge_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.description.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.description");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_22_description_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.description.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.description");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_23_description_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "CharmFlyoutLibrary.CharmFlyout.Heading":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "Heading", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_CharmFlyout_Heading;
                xamlMember.Setter = set_24_CharmFlyout_Heading;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.HeadingBackgroundBrush":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "HeadingBackgroundBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_CharmFlyout_HeadingBackgroundBrush;
                xamlMember.Setter = set_25_CharmFlyout_HeadingBackgroundBrush;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.Logo":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "Logo", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_CharmFlyout_Logo;
                xamlMember.Setter = set_26_CharmFlyout_Logo;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.IsOpen":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_CharmFlyout_IsOpen;
                xamlMember.Setter = set_27_CharmFlyout_IsOpen;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.ReturnToParentOnBack":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ReturnToParentOnBack", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_CharmFlyout_ReturnToParentOnBack;
                xamlMember.Setter = set_28_CharmFlyout_ReturnToParentOnBack;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.ParentFlyout":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ParentFlyout", "CharmFlyoutLibrary.CharmFlyout");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_CharmFlyout_ParentFlyout;
                xamlMember.Setter = set_29_CharmFlyout_ParentFlyout;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.FlyoutHeight":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "FlyoutHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_CharmFlyout_FlyoutHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "CharmFlyoutLibrary.CharmFlyout.FlyoutWidth":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "FlyoutWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_CharmFlyout_FlyoutWidth;
                xamlMember.Setter = set_31_CharmFlyout_FlyoutWidth;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.BackCommand":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "BackCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_CharmFlyout_BackCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "CharmFlyoutLibrary.CharmFlyout.HeadingForegroundBrush":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "HeadingForegroundBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_CharmFlyout_HeadingForegroundBrush;
                xamlMember.Setter = set_33_CharmFlyout_HeadingForegroundBrush;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.ContentForegroundBrush":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ContentForegroundBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_CharmFlyout_ContentForegroundBrush;
                xamlMember.Setter = set_34_CharmFlyout_ContentForegroundBrush;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.ContentBackgroundBrush":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ContentBackgroundBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_CharmFlyout_ContentBackgroundBrush;
                xamlMember.Setter = set_35_CharmFlyout_ContentBackgroundBrush;
                break;
            case "CharmFlyoutLibrary.CharmFlyout.ContentPadding":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CharmFlyoutLibrary.CharmFlyout");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ContentPadding", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_CharmFlyout_ContentPadding;
                xamlMember.Setter = set_36_CharmFlyout_ContentPadding;
                break;
            case "Typing_Tester.speedtest.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_37_speedtest_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_38_speedtest_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest2.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_39_speedtest2_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest2.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_40_speedtest2_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest3.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_41_speedtest3_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest3.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_42_speedtest3_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest4.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_43_speedtest4_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest4.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_44_speedtest4_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest5.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest5");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_45_speedtest5_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.speedtest5.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.speedtest5");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_46_speedtest5_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training1.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training1");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_47_Training1_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training1.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training1");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_48_Training1_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training2.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_49_Training2_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training2.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training2");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_50_Training2_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "AdDuplex.Controls.AdControl.AppId":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AdDuplex.Controls.AdControl");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "AppId", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_AdControl_AppId;
                xamlMember.Setter = set_51_AdControl_AppId;
                break;
            case "AdDuplex.Controls.AdControl.ResetConfig":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AdDuplex.Controls.AdControl");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "ResetConfig", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_AdControl_ResetConfig;
                xamlMember.Setter = set_52_AdControl_ResetConfig;
                break;
            case "AdDuplex.Controls.AdControl.IsTest":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AdDuplex.Controls.AdControl");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "IsTest", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_AdControl_IsTest;
                xamlMember.Setter = set_53_AdControl_IsTest;
                break;
            case "AdDuplex.Controls.AdControl.RefreshInterval":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AdDuplex.Controls.AdControl");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "RefreshInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_AdControl_RefreshInterval;
                xamlMember.Setter = set_54_AdControl_RefreshInterval;
                break;
            case "AdDuplex.Controls.AdControl.Size":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AdDuplex.Controls.AdControl");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "Size", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_AdControl_Size;
                xamlMember.Setter = set_55_AdControl_Size;
                break;
            case "Typing_Tester.Training3.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_56_Training3_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training3.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training3");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_57_Training3_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training4.DefaultViewModel":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Typing_Tester.Common.ObservableDictionary");
                xamlMember.Getter = get_58_Training4_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Typing_Tester.Training4.NavigationHelper":
                userType = (global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Typing_Tester.Training4");
                xamlMember = new global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Typing_Tester.Common.NavigationHelper");
                xamlMember.Getter = get_59_Training4_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlSystemBaseType
    {
        global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Typing_Tester.Typing_Tester_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


